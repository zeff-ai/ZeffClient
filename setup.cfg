[metadata]
name = ZeffClient
url = https://github.com/zeffai/zeffclient
description = setup.__doc__
long_description = file: README.rst, CHANGELOG.rst, LICENSE.rst
author = Lance Finn Helsten
author_email = lanhel@flyingtitans.com
maintainer = Lance Finn Helsten
maintainer_email = lanhel@flyingtitans.com
classifiers =
	Development Status :: 1 - Planning
	Environment :: Console
	Intended Audience :: Developers
	Intended Audience :: Science/Research
	Intended Audience :: Data Science
	License :: Other/Proprietary License
	Operating System :: POSIX
	Operating System :: OS Independent
	Programming Language :: Python :: 3.7
	Topic :: Scientific/Engineering :: Artificial Intelligence
	Topic :: Scientific/Engineering :: Image Recognition
	Topic :: Scientific/Engineering :: Information Analysis
	Topic :: Software Development :: Libraries :: Python Modules

[options]
python_requires = >=3.7
packages = find:
setup_requires =
	setuptools_scm
install_requires =
	PyYAML>=3.11
	pyaml>=15.0
	requests>=2.22
	tqdm>=4.0
	deprecated>=1.0

[options.packages.find]

[options.package_data]
zeff = *.yml
zeff.cli = *.txt, *.conf, *.template

[options.entry_points]
console_scripts = zeff=zeff.cli.__main__:main

[options.extras_require]
dev   =
	pre-commit>=1.0
	setup-cfg-fmt>=1.0
	black
examples =
	PyYAML>=5.0
	lxml>=4.0
docs  =
	docutils>=0.3
	Sphinx>=2.0
	sphinxcontrib-plantuml>=0.0
lint  =
	pylint>=2.3
	pycodestyle>=2.5
	pydocstyle>=3.0
	mypy>=0.710
tests =
	pytest>=4.6
	pytest-cov>=2.7
	coverage>=4.0
	hypothesis>=4.23

[pycodestyle]
count = False
max-line-length = 130
statistics = True

[pydocstyle]
#convention=pep257
#Using pep257 with addition of D202 due to Black
ignore=D202,D203,D212,D213,D214,D215,D404,D405,D406,D407,D408,D409,D410,D411

[mypy]
python_version = 3.7
warn_return_any = True
warn_unused_configs = True

[mypy-deprecated]
ignore_missing_imports = True

[mypy-tqdm]
ignore_missing_imports = True

[tool:pytest]
testpaths = tests
addopts = --maxfail=2 -rf

[coverage:run]
branch = True

[coverage:report]
exclude_lines =
	# Have to re-enable the standard pragma
	pragma: no cover

	# Don't complain about missing debug-only code:
	def __repr__
	if self\.debug

	# Don't complain if tests don't hit defensive assertion code:
	raise AssertionError
	raise NotImplementedError

	# Don't complain if non-runnable code isn't run:
	if 0:
	if __name__ == .__main__.:

ignore_errors = True

[coverage:html]
directory = coverage_html_report

